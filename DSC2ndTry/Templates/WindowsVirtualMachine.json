{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "StorageAccountName": {
      "type": "string",
      "defaultValue": "ascdevlabsolu"
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "nodeName": {
      "type": "string",
      "defaultValue": "solutions-sql"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "customerName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Domain Name for the Forest."
      }
    },
    "domainName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Domain Name for the Forest."
      }
    },
    "domainJoinOptions": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    }
  },
  "variables": {
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "DC-OSDiskName": "DCSystem",
    "DC-DataDiskName": "DCData",
    "DC-DataDiskSize": "20",
    "DC-NicName": "[concat(parameters('customerName'), '-DC-NIC')]",
    "DC-PIP-Name": "[concat(parameters('customerName'), 'dcpip')]",
    "DC-Name": "[concat(parameters('customerName'), '-DC')]",
    "DC-InternalIP": "10.0.0.10",
    "DC-VMSize": "Standard_D2",
    "SQL-OSDiskName": "SQLSystem",
    "SQL-DataDiskName": "SQLData",
    "SQL-DataDiskSize": "80",
    "SQL-LogDiskName": "SQLLog",
    "SQL-LogDiskSize": "40",
    "SQL-NicName": "[concat(parameters('customerName'), '-SQL-NIC')]",
    "SQL-PIP-Name": "[concat(parameters('customerName'), 'sqlpip')]",
    "SQL-Name": "[concat(parameters('customerName'), '-SQL')]",
    "SQL-InternalIP": "10.0.0.20",
    "SQL-VMSize": "Standard_D2",
    "SP-OSDiskName": "SPSystem",
    "SP-DataDiskName": "SPData",
    "SP-DataDiskSize": "80",
    "SP-LogDiskName": "SPLog",
    "SP-LogDiskSize": "20",
    "SP-SearchDiskName": "SPSearch",
    "SP-SearchDiskSize": "20",
    "SP-NicName": "[concat(parameters('customerName'), '-SP-NIC')]",
    "SP-PIP-Name": "[concat(parameters('customerName'), 'sppip')]",
    "SP-Name": "[concat(parameters('customerName'), '-SP')]",
    "SP-InternalIP": "10.0.0.30",
    "SP-VMSize": "Standard_D2",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "[concat(parameters('customerName'), '-Subnet')]",
    "subnetPrefix": "10.0.0.0/24",
    "vhdStorageType": "Standard_LRS",
    "publicIPAddressType": "Static",
    "vhdStorageContainerName": "vhds",
    "VNET-Name": "[concat(parameters('customerName'), '-VNET')]",
    "VnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('VNET-Name'))]",
    "SubnetRef": "[concat(variables('VnetId'), '/subnets/', variables('subnetName'))]",
    "vhdStorageName": "[parameters('StorageAccountName')]",
    "dscDCConfigurationFunction": "dscDCConfiguration.ps1\\Main",
    "apiVersion": "2015-06-15",
    "PrepareDisksConfigurationFunction": "PrepareDisks.ps1\\DataDisk"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('StorageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('DC-PIP-Name')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "DC-PIP"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('DC-PIP-Name')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('SQL-PIP-Name')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "SQL-PIP"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('SQL-PIP-Name')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('SP-PIP-Name')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "SP-PIP"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('SP-PIP-Name')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('VNET-Name')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualNetwork"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('DC-NicName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "DC-NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('DC-PIP-Name'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('VNET-Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('DC-InternalIP')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('DC-PIP-Name'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('SQL-NicName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "SQL-NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('SQL-PIP-Name'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('VNET-Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('SQL-InternalIP')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('SQL-PIP-Name'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
            "10.0.0.10"
          ],
          "internalDnsNameLabel": "sql"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('SP-NicName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "SP-NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('SP-PIP-Name'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('VNET-Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('SP-InternalIP')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('SP-PIP-Name'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
            "10.0.0.10"
          ],
          "internalDnsNameLabel": "sp"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('DC-Name')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "variables('DC-Name')"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('vhdStorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('DC-NicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('DC-VMSize')]"
        },
        "osProfile": {
          "computerName": "[variables('DC-Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "Central Europe Standard Time"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('DC-OSDiskName')]",
            "vhd": {
              "uri": "[concat('http://', variables('vhdStorageName'), '.blob.core.windows.net/', variables('vhdStorageContainerName'), '/', variables('DC-OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://',parameters('StorageAccountName'),'.blob.core.windows.net/vhds/', variables('DC-DataDiskName'),'-1.vhd')]"
              },
              "name": "[concat(variables('DC-DataDiskName'),'1')]",
              "caching": "None",
              "createOption": "empty",
              "diskSizeGB": "[variables('DC-DataDiskSize')]",
              "lun": 0
            }
          ]
        },

        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('DC-NicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "name": "dscDC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/', variables('vhdStorageName'))]",
            "[concat('Microsoft.Compute/virtualMachines/', variables('DC-Name'))]"

          ],
          "tags": {
            "displayName": "dscDC"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "modulesUrl": "[concat(parameters('_artifactsLocation'), '/', 'dscDCConfiguration.ps1.zip')]",
              "sasToken": "[parameters('_artifactsLocationSasToken')]",
              "configurationFunction": "[variables('dscDCConfigurationFunction')]",
              "properties": {
                "nodeName": "[variables('DC-Name')]",
                "domainName": "[parameters('domainName')]",
                "domainAdminCredentials": {
                  "UserName": "[parameters('adminUserName')]",
                  "Password": "PrivateSettingsRef:Password"
                }
              }
            },
            "protectedSettings": {
              "items": {
                "Password": "[parameters('adminPassword')]"
              },
              "DataBlobUri": "[concat(parameters('_artifactsLocation'), '/dscDCConfigurationData.psd1')]"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('SQL-Name')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "variables('SQL-Name')"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('vhdStorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('SQL-NicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('SQL-VMSize')]"
        },
        "osProfile": {
          "computerName": "[variables('SQL-Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "Central Europe Standard Time"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('SQL-OSDiskName')]",
            "vhd": {
              "uri": "[concat('http://', variables('vhdStorageName'), '.blob.core.windows.net/', variables('vhdStorageContainerName'), '/', variables('SQL-OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://',parameters('StorageAccountName'),'.blob.core.windows.net/vhds/', variables('SQL-DataDiskName'),'.vhd')]"
              },
              "name": "[variables('SQL-DataDiskName')]",
              "caching": "None",
              "createOption": "empty",
              "diskSizeGB": "[variables('SQL-DataDiskSize')]",
              "lun": 0
            },
            {
              "vhd": {
                "uri": "[concat('http://',parameters('StorageAccountName'),'.blob.core.windows.net/vhds/', variables('SQL-LogDiskName'),'.vhd')]"
              },
              "name": "[variables('SQL-LogDiskName')]",
              "caching": "None",
              "createOption": "empty",
              "diskSizeGB": "[variables('SQL-LogDiskSize')]",
              "lun": 1
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('SQL-NicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "apiVersion": "[variables('apiVersion')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('SQL-Name'),'/joindomain')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('SQL-Name'))]",
            "[concat('Microsoft.Compute/virtualMachines/', variables('DC-Name'),'/extensions/dscDC')]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "Name": "[parameters('domainName')]",
              "OUPath": "",
              "User": "[concat(parameters('domainName'), '\\', parameters('adminUsername'))]",
              "Restart": "true",
              "Options": "[parameters('domainJoinOptions')]"
            },
            "protectedsettings": {
              "Password": "[parameters('adminPassword')]"
            }
          }
        },
          {
              "name": "PrepareDisks",
              "type": "extensions",
              "location": "[resourceGroup().location]",
              "apiVersion": "2015-06-15",
              "dependsOn": [
                  "[concat('Microsoft.Compute/virtualMachines/', variables('SQL-Name'))]"
              ],
              "tags": {
                  "displayName": "PrepareDisks"
              },
              "properties": {
                  "publisher": "Microsoft.Powershell",
                  "type": "DSC",
                  "typeHandlerVersion": "2.9",
                  "autoUpgradeMinorVersion": true,
                "settings": {
                  "modulesUrl": "[concat(parameters('_artifactsLocation'), '/', 'PrepareDisks.ps1.zip')]",
                  "sasToken": "[parameters('_artifactsLocationSasToken')]",
                  "configurationFunction": "[variables('PrepareDisksConfigurationFunction')]",
                  "properties": {
                    "nodeName": "[parameters('nodeName')]"
                  }
                },
                "protectedSettings": {
                  "DataBlobUri": "[concat(parameters('_artifactsLocation'), '/PrepareDisksData.psd1')]"
                }
              }
          }
      ]
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('SP-Name')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "variables('SP-Name')"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('vhdStorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('SP-NicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('SP-VMSize')]"
        },
        "osProfile": {
          "computerName": "[variables('SP-Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "Central Europe Standard Time"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('SP-OSDiskName')]",
            "vhd": {
              "uri": "[concat('http://', variables('vhdStorageName'), '.blob.core.windows.net/', variables('vhdStorageContainerName'), '/', variables('SP-OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://',parameters('StorageAccountName'),'.blob.core.windows.net/vhds/', variables('SP-DataDiskName'),'.vhd')]"
              },
              "name": "[variables('SP-DataDiskName')]",
              "caching": "None",
              "createOption": "empty",
              "diskSizeGB": "[variables('SP-DataDiskSize')]",
              "lun": 0
            },
            {
              "vhd": {
                "uri": "[concat('http://',parameters('StorageAccountName'),'.blob.core.windows.net/vhds/', variables('SP-LogDiskName'),'.vhd')]"
              },
              "name": "[variables('SP-LogDiskName')]",
              "caching": "None",
              "createOption": "empty",
              "diskSizeGB": "[variables('SP-LogDiskSize')]",
              "lun": 1
            },
            {
              "vhd": {
                "uri": "[concat('http://',parameters('StorageAccountName'),'.blob.core.windows.net/vhds/', variables('SP-SearchDiskName'),'.vhd')]"
              },
              "name": "[variables('SP-SearchDiskName')]",
              "caching": "None",
              "createOption": "empty",
              "diskSizeGB": "[variables('SP-SearchDiskSize')]",
              "lun": 2
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('SP-NicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "apiVersion": "[variables('apiVersion')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('SP-Name'),'/joindomain')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('SP-Name'))]",
            "[concat('Microsoft.Compute/virtualMachines/', variables('DC-Name'),'/extensions/dscDC')]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "Name": "[parameters('domainName')]",
              "OUPath": "",
              "User": "[concat(parameters('domainName'), '\\', parameters('adminUsername'))]",
              "Restart": "true",
              "Options": "[parameters('domainJoinOptions')]"
            },
            "protectedsettings": {
              "Password": "[parameters('adminPassword')]"
            }
          }
        }
      ]
    }
  ]
}


 
